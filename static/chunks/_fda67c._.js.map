{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx'\nimport { customAlphabet } from 'nanoid'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport const nanoid = customAlphabet(\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n  7\n) // 7-character random string\n\nexport async function fetcher<JSON = any>(\n  input: RequestInfo,\n  init?: RequestInit\n): Promise<JSON> {\n  const res = await fetch(input, init)\n\n  if (!res.ok) {\n    const json = await res.json()\n    if (json.error) {\n      const error = new Error(json.error) as Error & {\n        status: number\n      }\n      error.status = res.status\n      throw error\n    } else {\n      throw new Error('An unexpected error occurred')\n    }\n  }\n\n  return res.json()\n}\n\nexport function formatDate(input: string | number | Date): string {\n  const date = new Date(input)\n  return date.toLocaleDateString('en-US', {\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  })\n}\n\nexport const formatNumber = (value: number) =>\n  new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(value)\n\nexport const runAsyncFnWithoutBlocking = (\n  fn: (...args: any) => Promise<any>\n) => {\n  fn()\n}\n\nexport const sleep = (ms: number) =>\n  new Promise(resolve => setTimeout(resolve, ms))\n\nexport const getStringFromBuffer = (buffer: ArrayBuffer) =>\n  Array.from(new Uint8Array(buffer))\n    .map(b => b.toString(16).padStart(2, '0'))\n    .join('')\n\nexport enum ResultCode {\n  InvalidCredentials = 'INVALID_CREDENTIALS',\n  InvalidSubmission = 'INVALID_SUBMISSION',\n  UserAlreadyExists = 'USER_ALREADY_EXISTS',\n  UnknownError = 'UNKNOWN_ERROR',\n  UserCreated = 'USER_CREATED',\n  UserLoggedIn = 'USER_LOGGED_IN'\n}\n\nexport const getMessageFromCode = (resultCode: string) => {\n  switch (resultCode) {\n    case ResultCode.InvalidCredentials:\n      return 'Invalid credentials!'\n    case ResultCode.InvalidSubmission:\n      return 'Invalid submission, please try again!'\n    case ResultCode.UserAlreadyExists:\n      return 'User already exists, please log in!'\n    case ResultCode.UserCreated:\n      return 'User created, welcome!'\n    case ResultCode.UnknownError:\n      return 'Something went wrong, please try again!'\n    case ResultCode.UserLoggedIn:\n      return 'Logged in!'\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,MAAM,SAAS,CAAA,GAAA,6JAAA,CAAA,iBAAc,AAAD,EACjC,kEACA,GACA,4BAA4B;;AAEvB,eAAe,QACpB,KAAkB,EAClB,IAAkB;IAElB,MAAM,MAAM,MAAM,MAAM,OAAO;IAE/B,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,IAAI,KAAK,KAAK,EAAE;YACd,MAAM,QAAQ,IAAI,MAAM,KAAK,KAAK;YAGlC,MAAM,MAAM,GAAG,IAAI,MAAM;YACzB,MAAM;QACR,OAAO;YACL,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,OAAO,IAAI,IAAI;AACjB;AAEO,SAAS,WAAW,KAA6B;IACtD,MAAM,OAAO,IAAI,KAAK;IACtB,OAAO,KAAK,kBAAkB,CAAC,SAAS;QACtC,OAAO;QACP,KAAK;QACL,MAAM;IACR;AACF;AAEO,MAAM,eAAe,CAAC,QAC3B,IAAI,KAAK,YAAY,CAAC,SAAS;QAC7B,OAAO;QACP,UAAU;IACZ,GAAG,MAAM,CAAC;AAEL,MAAM,4BAA4B,CACvC;IAEA;AACF;AAEO,MAAM,QAAQ,CAAC,KACpB,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;AAEtC,MAAM,sBAAsB,CAAC,SAClC,MAAM,IAAI,CAAC,IAAI,WAAW,SACvB,GAAG,CAAC,CAAA,IAAK,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,MACpC,IAAI,CAAC;;UAEE;;;;;;;GAAA,eAAA;AASL,MAAM,qBAAqB,CAAC;IACjC,OAAQ;QACN;YACE,OAAO;QACT;YACE,OAAO;QACT;YACE,OAAO;QACT;YACE,OAAO;QACT;YACE,OAAO;QACT;YACE,OAAO;IACX;AACF"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;AAOA,MAAM,kBAAkB,uKAAiB,QAAQ;AAEjD,MAAM,UAAU,uKAAiB,IAAI;AAErC,MAAM,iBAAiB,uKAAiB,OAAO;AAE/C,MAAM,+BAAiB,8JAAM,UAAU,MAGrC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,6LAAC,uKAAiB,OAAO;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,uKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/providers.tsx"],"sourcesContent":["'use client'\n\nimport { TooltipProvider } from '@/components/ui/tooltip'\nimport { ThemeProvider as NextThemesProvider } from 'next-themes'\nimport { ThemeProviderProps } from 'next-themes/dist/types'\n\nexport function Providers({ children, ...props }: ThemeProviderProps) {\n  return (\n    <NextThemesProvider forcedTheme=\"light\" {...props}>\n      <TooltipProvider>{children}</TooltipProvider>\n    </NextThemesProvider>\n  )\n}\n"],"names":[],"mappings":";;;;;;;AAAA;;;;AAMO,SAAS,UAAU,EAAE,QAAQ,EAAE,GAAG,OAA2B;IAClE,qBACE,6LAAC,mJAAA,CAAA,gBAAkB;QAAC,aAAY;QAAS,GAAG,KAAK;kBAC/C,cAAA,6LAAC,+HAAA,CAAA,kBAAe;sBAAE;;;;;;;;;;;AAGxB;KANgB"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;AAOA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,6LAAC,2IAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,cAAc;YACZ,YAAY;gBACV,OACE;gBACF,aAAa;gBACb,cACE;gBACF,cACE;YACJ;QACF;QACC,GAAG,KAAK;;;;;;AAGf;GArBM;;QACyB,mJAAA,CAAA,WAAQ;;;KADjC"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}